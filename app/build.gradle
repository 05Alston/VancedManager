import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'androidx.navigation.safeargs.kotlin'

ext.langs = getLanguages()

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.vanced.manager"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 13
        versionName "1.3.0b (Arcturus)"

        vectorDrawables.useSupportLibrary = true

        buildConfigField "String[]", "MANAGER_LANGUAGES", "{" + surroundWithQuotes(langs) + "}"
        buildConfigField "String[]", "MANAGER_LANGUAGE_NAMES", "{" + surroundWithQuotes(getLanguageNames()) + "}"
    }

    lintOptions {
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    aaptOptions {
        noCompress 'apk', '.apk'
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", variant.versionName
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

}

def getLanguages() {
    List<String> langs = new ArrayList<String>()
    langs.add("en")
    Pattern pattern = Pattern.compile("-(\\w+)-")
    new File("${projectDir}/src/main/res").eachDir { dir ->
        if (dir.name.startsWith("values-") && !dir.name.contains("v23")) {
            Matcher matcher = pattern.matcher(dir.name)
            if (matcher.find()) {
                if (langs.contains(matcher.group(1)))
                    langs.add(matcher.group(1) + "_${dir.name.substring(dir.name.length() - 2)}")
                else
                    langs.add(matcher.group(1))
            }
        }
    }
    return langs.toArray()
}

def getLanguageNames() {
    List<String> langnames = new ArrayList<String>()
    for (int i = 0; i < langs.size(); i++) {
        if (langs[i].length() > 2) {
            Locale loc = new Locale(langs[i].substring(0, langs[i].length() - 3), langs[i].substring(langs[i].length() - 2))
            project.logger.lifecycle(loc.getDisplayLanguage(loc).capitalize() + " (" + loc.getDisplayCountry(loc).capitalize() + ")")
            langnames.add(loc.getDisplayLanguage(loc).capitalize() + " (" + loc.getDisplayCountry(loc).capitalize() + ")")
        } else {
            Locale loc = new Locale(langs[i])
            project.logger.lifecycle(loc.getDisplayLanguage(loc).capitalize())
            langnames.add(loc.getDisplayLanguage(loc).capitalize())
        }
    }
    return langnames.toArray()
}

def surroundWithQuotes(Object[] arr) {
    String[] dummyArr = arr
    for (int i = 0; i < arr.length; i++) {
        dummyArr[i] = "\"" + arr[i] + "\""
    }
    return dummyArr.join(", ")
}

dependencies {

// Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

// AndroidX
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    implementation 'androidx.lifecycle:lifecycle-livedata-core-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.material:material:1.3.0-alpha02'

// Other
    implementation 'com.beust:klaxon:5.3'
    implementation 'com.crowdin.platform:mobile-sdk:1.1.6'
    implementation 'com.github.kittinunf.fuel:fuel:2.2.3'
    implementation 'com.github.kittinunf.fuel:fuel-coroutines:2.2.3'
    implementation 'com.github.kittinunf.fuel:fuel-json:2.2.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'
    implementation 'com.github.topjohnwu.libsu:core:3.0.1'
    implementation 'com.github.topjohnwu.libsu:io:3.0.1'
    implementation 'com.google.firebase:firebase-messaging:20.2.4'
    implementation 'com.google.firebase:firebase-perf:19.0.8'
    implementation 'com.mindorks.android:prdownloader:0.6.0'
    implementation 'com.google.firebase:firebase-analytics-ktx:17.5.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'

}
